services:
  flask_api:
    build: .
    container_name: model_server_api
    ports:
      - "8086:8086"
    networks:
      - model_server_net
    environment:
      - MODELS_PATH=/models    # path inside container
      - REGISTRY=/app/.tfserving_registry.json
    volumes:
      - models_data:/models                     # mount named volume for models/
      - /var/run/docker.sock:/var/run/docker.sock   # gives docker access to my pyhton code (tfserving_manager.py)
    labels:
      project: ModelServerREST
    restart: unless-stopped

  model_syncer:
    build:
      context: ./syncer
      dockerfile: syncer.Dockerfile
    container_name: model_syncer
    volumes:
      - ./models:/local_models   # Host folder (read-only inside container)
      - models_data:/models         # Shared named volume
    #restart: unless-stopped
    networks:
      - model_server_net
    working_dir: /syncer
    depends_on:
      - flask_api


volumes:
  models_data:                                  # declare named volume 

networks:
  model_server_net:
    external: true      